[{"/home/ubuntu/admin-mui/src/index.js":"1","/home/ubuntu/admin-mui/src/App.js":"2","/home/ubuntu/admin-mui/src/components/GlobalStyles.js":"3","/home/ubuntu/admin-mui/src/mixins/chartjs.js":"4","/home/ubuntu/admin-mui/src/theme/index.js":"5","/home/ubuntu/admin-mui/src/views/errors/NotFoundView.js":"6","/home/ubuntu/admin-mui/src/theme/typography.js":"7","/home/ubuntu/admin-mui/src/layouts/DashboardLayout/index.js":"8","/home/ubuntu/admin-mui/src/layouts/MainLayout/index.js":"9","/home/ubuntu/admin-mui/src/views/product/ProductListView/index.js":"10","/home/ubuntu/admin-mui/src/views/statusList/StatusListView/index.js":"11","/home/ubuntu/admin-mui/src/theme/shadows.js":"12","/home/ubuntu/admin-mui/src/components/Page.js":"13","/home/ubuntu/admin-mui/src/layouts/MainLayout/TopBar.js":"14","/home/ubuntu/admin-mui/src/layouts/DashboardLayout/TopBar.js":"15","/home/ubuntu/admin-mui/src/views/product/ProductListView/data.js":"16","/home/ubuntu/admin-mui/src/views/product/ProductListView/ProductCard.js":"17","/home/ubuntu/admin-mui/src/views/product/ProductListView/Toolbar.js":"18","/home/ubuntu/admin-mui/src/components/Logo.js":"19","/home/ubuntu/admin-mui/src/layouts/DashboardLayout/NavBar/index.js":"20","/home/ubuntu/admin-mui/src/layouts/DashboardLayout/NavBar/NavItem.js":"21","/home/ubuntu/admin-mui/src/views/auth/LoginView.js":"22","/home/ubuntu/admin-mui/src/icons/Facebook.js":"23","/home/ubuntu/admin-mui/src/icons/Google.js":"24","/home/ubuntu/admin-mui/src/views/hubAssignment/HubAssignmentView.js":"25","/home/ubuntu/admin-mui/src/views/hubAssignment/Toolbar.js":"26","/home/ubuntu/admin-mui/src/views/hubAssignment/RoomsTable.js":"27","/home/ubuntu/admin-mui/src/views/hubAssignment/SensorRangeTable.js":"28","/home/ubuntu/admin-mui/src/icons/tableIcons.js":"29","/home/ubuntu/admin-mui/src/views/reportStatus/ReportStatusView/index.js":"30","/home/ubuntu/admin-mui/src/views/reportStatus/ReportStatusView/Toolbar.js":"31","/home/ubuntu/admin-mui/src/views/reportStatus/ReportStatusView/ReportTable.js":"32","/home/ubuntu/admin-mui/src/serviceWorker.js":"33","/home/ubuntu/admin-mui/src/routes.js":"34","/home/ubuntu/admin-mui/src/views/statusList/StatusListView/StatusTable.js":"35","/home/ubuntu/admin-mui/src/views/statusList/StatusListView/Toolbar.js":"36","/home/ubuntu/admin-mui/src/services/auth.service.js":"37","/home/ubuntu/admin-mui/src/views/logPage/LogPageView/index.js":"38","/home/ubuntu/admin-mui/src/views/logPage/LogPageView/Toolbar.js":"39","/home/ubuntu/admin-mui/src/views/logPage/LogPageView/LogPageView.js":"40","/home/ubuntu/admin-mui/src/views/display/DisplayView/index.js":"41","/home/ubuntu/admin-mui/src/views/display/DisplayView/Toolbar.js":"42","/home/ubuntu/admin-mui/src/views/display/DisplayView/Display.js":"43"},{"size":320,"mtime":1609386934553,"results":"44","hashOfConfig":"45"},{"size":807,"mtime":1612488926068,"results":"46","hashOfConfig":"45"},{"size":672,"mtime":1606352409526,"results":"47","hashOfConfig":"45"},{"size":5586,"mtime":1606352409526,"results":"48","hashOfConfig":"45"},{"size":551,"mtime":1606352409526,"results":"49","hashOfConfig":"45"},{"size":1547,"mtime":1606352409526,"results":"50","hashOfConfig":"45"},{"size":570,"mtime":1606365952736,"results":"51","hashOfConfig":"45"},{"size":1343,"mtime":1606352409526,"results":"52","hashOfConfig":"45"},{"size":1001,"mtime":1606352409526,"results":"53","hashOfConfig":"45"},{"size":1832,"mtime":1606352409526,"results":"54","hashOfConfig":"45"},{"size":2663,"mtime":1615250651615,"results":"55","hashOfConfig":"45"},{"size":1639,"mtime":1606365802876,"results":"56","hashOfConfig":"45"},{"size":462,"mtime":1606352409526,"results":"57","hashOfConfig":"45"},{"size":781,"mtime":1607545678947,"results":"58","hashOfConfig":"45"},{"size":1955,"mtime":1610161402416,"results":"59","hashOfConfig":"45"},{"size":2809,"mtime":1606869106787,"results":"60","hashOfConfig":"45"},{"size":28395,"mtime":1609988437066,"results":"61","hashOfConfig":"45"},{"size":12120,"mtime":1608091096151,"results":"62","hashOfConfig":"45"},{"size":193,"mtime":1607561974692,"results":"63","hashOfConfig":"45"},{"size":5358,"mtime":1613180604677,"results":"64","hashOfConfig":"45"},{"size":1637,"mtime":1606352409526,"results":"65","hashOfConfig":"45"},{"size":6997,"mtime":1609982039640,"results":"66","hashOfConfig":"45"},{"size":820,"mtime":1606352409526,"results":"67","hashOfConfig":"45"},{"size":1566,"mtime":1606352409526,"results":"68","hashOfConfig":"45"},{"size":2835,"mtime":1608089644233,"results":"69","hashOfConfig":"45"},{"size":12634,"mtime":1608092073394,"results":"70","hashOfConfig":"45"},{"size":2904,"mtime":1608092121010,"results":"71","hashOfConfig":"45"},{"size":4790,"mtime":1608091614528,"results":"72","hashOfConfig":"45"},{"size":1662,"mtime":1607751532388,"results":"73","hashOfConfig":"45"},{"size":2316,"mtime":1608257874132,"results":"74","hashOfConfig":"45"},{"size":7389,"mtime":1610164238574,"results":"75","hashOfConfig":"45"},{"size":6887,"mtime":1608239212361,"results":"76","hashOfConfig":"45"},{"size":4953,"mtime":1608252506867,"results":"77","hashOfConfig":"45"},{"size":3074,"mtime":1611693933624,"results":"78","hashOfConfig":"45"},{"size":9102,"mtime":1615339248108,"results":"79","hashOfConfig":"45"},{"size":8027,"mtime":1610164168386,"results":"80","hashOfConfig":"45"},{"size":818,"mtime":1609980332090,"results":"81","hashOfConfig":"45"},{"size":2686,"mtime":1612317772506,"results":"82","hashOfConfig":"45"},{"size":13713,"mtime":1614829414682,"results":"83","hashOfConfig":"45"},{"size":5627,"mtime":1612317083574,"results":"84","hashOfConfig":"45"},{"size":2408,"mtime":1612556057698,"results":"85","hashOfConfig":"45"},{"size":14492,"mtime":1614830922666,"results":"86","hashOfConfig":"45"},{"size":16043,"mtime":1614852103393,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"amyzg1",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"90"},"/home/ubuntu/admin-mui/src/index.js",[],["182","183"],"/home/ubuntu/admin-mui/src/App.js",[],"/home/ubuntu/admin-mui/src/components/GlobalStyles.js",[],"/home/ubuntu/admin-mui/src/mixins/chartjs.js",[],"/home/ubuntu/admin-mui/src/theme/index.js",[],"/home/ubuntu/admin-mui/src/views/errors/NotFoundView.js",[],"/home/ubuntu/admin-mui/src/theme/typography.js",[],"/home/ubuntu/admin-mui/src/layouts/DashboardLayout/index.js",[],"/home/ubuntu/admin-mui/src/layouts/MainLayout/index.js",[],"/home/ubuntu/admin-mui/src/views/product/ProductListView/index.js",[],"/home/ubuntu/admin-mui/src/views/statusList/StatusListView/index.js",[],"/home/ubuntu/admin-mui/src/theme/shadows.js",[],"/home/ubuntu/admin-mui/src/components/Page.js",[],"/home/ubuntu/admin-mui/src/layouts/MainLayout/TopBar.js",[],"/home/ubuntu/admin-mui/src/layouts/DashboardLayout/TopBar.js",[],"/home/ubuntu/admin-mui/src/views/product/ProductListView/data.js",[],"/home/ubuntu/admin-mui/src/views/product/ProductListView/ProductCard.js",[],"/home/ubuntu/admin-mui/src/views/product/ProductListView/Toolbar.js",[],"/home/ubuntu/admin-mui/src/components/Logo.js",[],"/home/ubuntu/admin-mui/src/layouts/DashboardLayout/NavBar/index.js",[],"/home/ubuntu/admin-mui/src/layouts/DashboardLayout/NavBar/NavItem.js",[],["184","185"],"/home/ubuntu/admin-mui/src/views/auth/LoginView.js",[],"/home/ubuntu/admin-mui/src/icons/Facebook.js",[],["186","187"],"/home/ubuntu/admin-mui/src/icons/Google.js",[],"/home/ubuntu/admin-mui/src/views/hubAssignment/HubAssignmentView.js",[],"/home/ubuntu/admin-mui/src/views/hubAssignment/Toolbar.js",[],"/home/ubuntu/admin-mui/src/views/hubAssignment/RoomsTable.js",[],"/home/ubuntu/admin-mui/src/views/hubAssignment/SensorRangeTable.js",[],"/home/ubuntu/admin-mui/src/icons/tableIcons.js",[],"/home/ubuntu/admin-mui/src/views/reportStatus/ReportStatusView/index.js",[],"/home/ubuntu/admin-mui/src/views/reportStatus/ReportStatusView/Toolbar.js",[],"/home/ubuntu/admin-mui/src/views/reportStatus/ReportStatusView/ReportTable.js",[],"/home/ubuntu/admin-mui/src/serviceWorker.js",[],"/home/ubuntu/admin-mui/src/routes.js",[],"/home/ubuntu/admin-mui/src/views/statusList/StatusListView/StatusTable.js",[],"/home/ubuntu/admin-mui/src/views/statusList/StatusListView/Toolbar.js",[],"/home/ubuntu/admin-mui/src/services/auth.service.js",[],"/home/ubuntu/admin-mui/src/views/logPage/LogPageView/index.js",[],"/home/ubuntu/admin-mui/src/views/logPage/LogPageView/Toolbar.js",["188"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  // TextField,\n  // InputAdornment,\n  // SvgIcon,\n  makeStyles,\n  FormControl,\n  InputLabel,\n  Select,\n  // CardHeader,\n  // Typography\n} from '@material-ui/core';\n//import { Search as SearchIcon } from 'react-feather';\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 160,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Toolbar = ({ className, value, onChange, ...rest }) => {\n  console.log(value)\n  const classes = useStyles();\n  const [state, setState] = useState({\n    campus: '',\n    venue: '',\n  });\n  const [campusData, setCampusData] = useState([]);\n  const [venuesData, setVenuesData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [roomData, setRoomData] = useState([]);\n  const [hubsData, setHubsData] = useState([]);\n  const [showVenue, setShowVenue] = useState(false);\n  const [showHub, setShowHub] = useState(false);\n  const [showSection, setShowSection] = useState(false);\n  const [showRoom, setShowRoom] = useState(false);\n  // const [haveVenues, setHaveVenues] = useState(false);\n\n\n  const campusHandleChange = async (event) => {\n    // onChange(\"\")\n    setHubsData([])\n    var name = event.target.name;\n    var selectedIndex = event.target.options.selectedIndex;\n    console.log(event.target.options[selectedIndex].innerText);\n    var campus = campusData.find(({campus_id}) => campus_id == event.target.value)\n    console.log(campus)\n    var campus_id = event.target.value;\n\n    //  console.log(event)\n    setState({\n      ...state,\n      [name]: event.target.value,\n      //campus_name: event.target.options[selectedIndex].innerText,\n      campus_name: campus.rabbitmq_id\n\n    });\n    let venueResult = await axios({\n      method: 'get',\n      url: `http://${process.env.REACT_APP_SERVER_URI}/api/venues?campus_id=${event.target.value}`,\n      //data: {id: varID},\n      headers: { \"Access-Control-Allow-Origin\": \"*\" }\n    })\n\n    if (venueResult.data[0].venue_id !== 0) {\n      //console.log(venueResult.data.venue_id)\n      setShowHub(false)\n      setShowRoom(false)\n      setShowVenue(true)\n      setShowSection(false)\n      setVenuesData(venueResult.data)\n\n    }\n    else {\n      setShowVenue(false)\n      setShowSection(false)\n      setShowRoom(false)\n\n      let hubResult = await axios({\n        method: 'get',\n        url: `http://${process.env.REACT_APP_SERVER_URI}/api/hubs?campus_id=${campus_id}`,\n        //data: {id: varID},\n        headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      })\n      console.log(hubResult.data)\n      setShowHub(true)\n      setHubsData(hubResult.data)\n\n\n    }\n\n  };\n\n  const venueHandleChange = async (event) => {\n    //  onChange(\"\")\n\n    setSectionData([])\n    var name = event.target.name;\n    var selectedIndex = event.target.options.selectedIndex;\n    console.log(event.target.options[selectedIndex].innerText);\n    ///////   var venue_id = event.target.value;\n    //  console.log(event)\n    setState({\n      ...state,\n      [name]: event.target.value,\n      venue_name: event.target.options[selectedIndex].innerText\n\n    });\n    let sectionResult = await axios({\n      method: 'get',\n      url: `http://${process.env.REACT_APP_SERVER_URI}/api/venue-sections?campus_id=${state.campus}&venue_id=${event.target.value}`,\n      //data: {id: varID},\n      headers: { \"Access-Control-Allow-Origin\": \"*\" }\n    })\n\n    if (sectionResult.data[0].venue_section_id !== 0) {\n      //console.log(venueResult.data.venue_id)\n      setShowHub(false)\n      setShowRoom(false)\n      setShowVenue(true)\n      setShowSection(true)\n      setSectionData(sectionResult.data)\n\n    }\n    else {\n      setShowVenue(false)\n      let hubResult = await axios({\n        method: 'get',\n        url: `http://${process.env.REACT_APP_SERVER_URI}/api/hubs?campus_id=${state.campus}`,\n        //data: {id: varID},\n        headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      })\n      console.log(hubResult.data)\n      setShowHub(true)\n      setHubsData(hubResult.data)\n\n    }\n\n  };\n\n\n  const sectionHandleChange = async (event) => {\n    //  onChange(\"\")\n\n    setRoomData([])\n    var name = event.target.name;\n    var selectedIndex = event.target.options.selectedIndex;\n    console.log(event.target.options[selectedIndex].innerText);\n    ///////   var venue_id = event.target.value;\n    //  console.log(event)\n    setState({\n      ...state,\n      [name]: event.target.value,\n      section_name: event.target.options[selectedIndex].innerText\n\n    });\n    let roomResult = await axios({\n      method: 'get',\n      url: `http://${process.env.REACT_APP_SERVER_URI}/api/rooms?campus_id=${state.campus}&venue_id=${state.venue}&venue_section_id=${event.target.value}`,\n      //data: {id: varID},\n      headers: { \"Access-Control-Allow-Origin\": \"*\" }\n    })\n\n    if (roomResult.data[0].room_id !== null) {\n      console.log(roomResult.data)\n      setShowHub(false)\n      setShowVenue(true)\n      setShowSection(true)\n      setRoomData(roomResult.data)\n      setShowRoom(true)\n\n    }\n    else {\n      //setShowVenue(false)\n      let hubResult = await axios({\n        method: 'get',\n        url: `http://${process.env.REACT_APP_SERVER_URI}/api/hubs?campus_id=${state.campus}`,\n        //data: {id: varID},\n        headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      })\n      console.log(hubResult.data)\n      setShowHub(true)\n      setHubsData(hubResult.data)\n\n\n    }\n\n\n\n  };\n\n  const roomHandleChange = async (event) => {\n    //  onChange(\"\")\n    setHubsData([])\n    var name = event.target.name;\n    var selectedIndex = event.target.options.selectedIndex;\n    console.log(event.target.options[selectedIndex].innerText);\n    ///////   var venue_id = event.target.value;\n    console.log(name)\n    setState({\n      ...state,\n      [name]: event.target.value,\n      room_name: event.target.options[selectedIndex].innerText\n\n    });\n    console.log(event.target.value)\n\n    let roomResult = await axios({\n      method: 'get',\n      url: `http://${process.env.REACT_APP_SERVER_URI}/api/hubs?campus_id=${state.campus}&venue_id=${state.venue}&venue_section_id=${state.section}&room_id=${event.target.value}`,\n      //data: {id: varID},\n      headers: { \"Access-Control-Allow-Origin\": \"*\" }\n    })\n\n    //if (roomResult.data[0].hub_id !== null){\n    console.log(roomResult.data)\n    setShowHub(true)\n    setShowVenue(true)\n    setShowSection(true)\n    setHubsData(roomResult.data)\n    setShowRoom(true)\n\n    // }\n    // else{\n    //   //setShowVenue(false)\n    //   let hubResult = await axios({\n    //     method: 'get',\n    //     url: `http://${process.env.REACT_APP_SERVER_URI}/api/hubs?campus_id=${state.campus}`,\n    //     //data: {id: varID},\n    //     headers: { \"Access-Control-Allow-Origin\": \"*\" }\n    //   })\n    //   console.log(hubResult.data)\n    //   setShowHub(true)\n    //   setHubsData(hubResult.data)\n\n\n    // }\n\n\n\n  };\n\n  const hubHandleChange = (event) => {\n    // Here, we invoke the callback with the new value\n    var name = event.target.name;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n    // onChange(event.target.value);\n    // onChange({\n    //   ...state,\n    //   [name]: event.target.value,\n    // });\n  }\n\n\n  useEffect(() => {\n    //  console.log(props)\n    async function fetchData() {\n      const result = await axios({\n        method: 'get',\n        url: `http://${process.env.REACT_APP_SERVER_URI}/api/campus`,\n        //data: {id: varID},\n        headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      })\n      //var campuseData=result.data\n      console.log(result.data)\n      setCampusData(result.data)\n    }\n    fetchData()\n  }, []);\n\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button className={classes.importButton}>\n          Import\n        </Button>\n        <Button className={classes.exportButton}>\n          Export\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add product\n        </Button>\n      </Box> */}\n      <Box >\n        <Card>\n          {/* <CardHeader> */}\n\n          {/* </CardHeader> */}\n          <CardContent>\n            <Box maxWidth={2500} mt={1}>\n              {/* <Typography component=\"h1\" variant=\"h4\" color=\"textPrimary\" gutterBottom>\n                  Please Select Hub ID :\n            </Typography> */}\n              {/* <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search product\"\n                variant=\"outlined\"\n              /> */}\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"campus\">Campus</InputLabel>\n                <Select\n                  native\n                  value={state.campus}\n                  onChange={campusHandleChange}\n                  label=\"Campus\"\n                  inputProps={{\n                    name: 'campus',\n                    id: 'campus',\n                    // havevenues:'false'\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {campusData.map((campus) =>\n                    <option value={campus.campus_id} key={campus.campus_id} >{campus.name}</option>\n                  )}\n                  {/* <option value={30}>Thirty</option> */}\n                </Select>\n              </FormControl>\n              {showVenue ? <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"venue\">Venue</InputLabel>\n                <Select\n                  native\n                  value={state.venue}\n                  onChange={venueHandleChange}\n                  label=\"Venue\"\n                  inputProps={{\n                    name: 'venue',\n                    id: 'venue',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {venuesData.map((venue, index) =>\n                    <option value={venue.venue_id} key={index}>{venue.name}</option>\n                  )}\n                </Select>\n              </FormControl> : null}\n              {showSection ? <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"section\">Venue Section</InputLabel>\n                <Select\n                  native\n                  value={state.section}\n                  onChange={sectionHandleChange}\n                  label=\"Venue Section\"\n                  inputProps={{\n                    name: 'section',\n                    id: 'section',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {sectionData.map((section, index) =>\n                    <option value={section.venue_section_id} key={index}>{section.section_name}</option>\n                  )}\n                </Select>\n              </FormControl> : null}\n\n              {showRoom ? <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"room\">Room</InputLabel>\n                <Select\n                  native\n                  value={state.room}\n                  onChange={roomHandleChange}\n                  label=\"Room\"\n                  inputProps={{\n                    name: 'room',\n                    id: 'room',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {roomData.map((room, index) =>\n                    <option value={room.room_id} key={index}>{room.name}</option>\n                  )}\n                </Select>\n              </FormControl> : null}\n              {showHub ? <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"hub\">Hub</InputLabel>\n                <Select\n                  native\n                  value={state.hub}\n                  onChange={hubHandleChange}\n                  label=\"Hub\"\n                  inputProps={{\n                    name: 'hub',\n                    id: 'hub',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {hubsData.map((hub, index) =>\n                    <option value={hub.hub_id} key={index}>{hub.hub_id}</option>\n                  )}\n                </Select>\n              </FormControl> : null}\n              <FormControl variant=\"outlined\" className={classes.formControl} >\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.button}\n                  //startIcon={<Autorenew />}\n                  onClick={() => { onChange(state) }}\n                >Open Log Stream\n              </Button>\n              </FormControl>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\nToolbar.propTypes = {\n  className: PropTypes.string\n};\nexport default Toolbar;\n","/home/ubuntu/admin-mui/src/views/logPage/LogPageView/LogPageView.js",["189","190","191","192"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  // Checkbox,\n  Paper,\n  Typography,\n  makeStyles,\n  Divider\n} from '@material-ui/core';\n\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone'\nimport { io } from 'socket.io-client';\n//import amqp from 'amqplib'\nimport { Client, Message } from '@stomp/stompjs';\n\n// var StompJs = require('@stomp/stompjs');\n\nimport JSONPretty from 'react-json-pretty';\n\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n    width: '50px',\n    // height:'100px',\n    // padding: '10px',\n    // margin:'0'\n    borderBottom: \"none\"\n\n  },\n  cell: {\n    // width: '50px',\n    // height:'100px',\n    // padding: '5px',\n    // margin:'0'\n    borderBottom: \"none\"\n  },\n  stall: {\n    background: \"grey\",\n    color: \"white\",\n    textAlign: \"center\",\n    height: \"60px\",\n    border: \"solid\",\n    borderColor: \"white\",\n    borderWidth: \"15px\",\n    borderRadius: \"60px\"\n  },\n\n}));\n//const ENDPOINT = `http://${process.env.REACT_APP_SERVER_URI}`\n//const MASSAGE_BROKER_ENDPOINT = `amqp://${process.env.REACT_APP_MESSAGE_BROKER_USERNAME}:${process.env.REACT_APP_MESSAGE_BROKER_PASSWORD}@${process.env.REACT_APP_MESSAGE_BROKER_HOST}:${process.env.REACT_APP_MESSAGE_BROKER_PORT}/`\nconst WS_ENDPOINT = `ws://${process.env.REACT_APP_MESSAGE_BROKER_HOST}:${process.env.REACT_APP_MESSAGE_BROKER_PORT}/ws`\n\n\n// const hubID = '9A6AFEE80000'\n\n//var open = require('amqplib').connect(MASSAGE_BROKER_ENDPOINT);\n\n\nconst LogPageView = ({ className, hubData, ...rest }) => {\n  const classes = useStyles();\n  console.log(hubData)\n  // const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n\n  // const [response, setResponse] = useState(\"\");\n  const [theArray, setTheArray] = useState([]);\n\n\n  useEffect(() => {\n    //  const socket = io(ENDPOINT);\n\n    const client = new Client({\n      brokerURL: `${WS_ENDPOINT}`,\n      connectHeaders: {\n        login: process.env.REACT_APP_MESSAGE_BROKER_USERNAME,\n        passcode: process.env.REACT_APP_MESSAGE_BROKER_PASSWORD,\n      },\n      debug: function (str) {\n        console.log(str);\n      },\n      // reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n    });\n\n\n\n    client.onConnect = function (frame) {\n      console.log('done')\n      // Do something, all subscribes must be done is this callback\n      // This is needed because this will be executed after a (re)connect\n\n\n      // client.publish({\n      //   destination: '/topic/general',\n      //   body: 'Hello world',\n      //   headers: { priority: '9' },\n      // });\n      var subscription = client.subscribe(`/exchange/${hubData.campus_name}/${hubData.venue_name}.${hubData.section_name}.${hubData.room_name}`, function (message) {\n        // called when the client receives a STOMP message from the server\n        if (message.body) {\n          console.log('got message with body ' + message.body);\n          setTheArray(oldArray => {\n            // if(oldArray.length==0)\n            return [ message.body,...oldArray]\n          //   else{\n          //   console.log(typeof(message.body))\n          //  return oldArray.unshift(message.body)\n          //   }\n          });\n\n        } else {\n          console.log('got empty message');\n        }\n      });\n    };\n\n    client.onStompError = function (frame) {\n      // Will be invoked in case of error encountered at Broker\n      // Bad login/passcode typically will cause an error\n      // Complaint brokers will set `message` header with a brief message. Body may contain details.\n      // Compliant brokers will terminate the connection after any error\n      console.log('Broker reported error: ' + frame.headers['message']);\n      console.log('Additional details: ' + frame.body);\n    };\n\n    client.activate();\n\n\n\n\n\n\n\n    // var q=hubID\n\n    //  open.then(function(conn) {\n    //     return conn.createChannel();\n    //   }).then(function(ch) {\n    //     return ch.assertQueue(q).then(function(ok) {\n    //       return ch.consume(q, function(msg) {\n    //         if (msg !== null) {\n\n    //           console.log(msg.content.toString());\n\n    //           setTheArray(oldArray => [...oldArray, msg]);\n\n    //           ch.ack(msg);\n    //         }\n\n    //       });\n    //     });\n    //   }).catch(console.warn);\n\n    /*\n          socket.on( hubID , data => {\n              console.log(data)\n          //  setResponse(data);\n            setTheArray(oldArray => [...oldArray, data]);\n    \n          });\n    \n         return () =>  socket.off(hubID);    */\n         return () =>  client.deactivate();    \n\n  }, [hubData]);\n\n\n\n  return (\n\n    <PerfectScrollbar>\n      <Box>\n        <Paper >\n          <Box p={3} textAlign={'center'} >\n            <Typography>\n              HUD ID : {hubData.hub}\n                        </Typography>\n          </Box>\n          <Box p={3} fontWeight={\"fontWeightLight\"}  >\n\n            {theArray.map((element, index) => <div key={index}>\n              {/* <Typography style={{ fontSize: '13px' }}> */}\n              <JSONPretty id=\"json-pretty\" data={JSON.parse(element)}>\n\n              </JSONPretty>\n \n              {/* </Typography> */}\n              <Divider />\n            </div>)}\n\n          </Box>\n        </Paper >\n      </Box>\n    </PerfectScrollbar>\n\n  );\n};\n\nLogPageView.propTypes = {\n  className: PropTypes.string,\n  hubData: PropTypes.object\n};\n\nexport default LogPageView;\n","/home/ubuntu/admin-mui/src/views/display/DisplayView/index.js",["193","194"],"import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Display from './Display';\nimport Toolbar from './Toolbar';\n//import data from './data';\n\n//import axios from 'axios'\n//import dotenv from 'dotenv/config'\n\n// function report(){\n//   return axios({\n//     method: 'get', \n//     url: 'http://3.15.126.206/api/report',\n//     //data: {id: varID},\n//     headers: {\"Access-Control-Allow-Origin\": \"*\"}\n//   }).then(response => response.data)\n// }\n// const data=report()\n// console.log(data)\n// async function dd (){\n// const data = await axios({\n//   method: 'get', \n//   url: 'http://3.15.126.206/api/report',\n//   //data: {id: varID},\n//   headers: {\"Access-Control-Allow-Origin\": \"*\"}\n// })\n// // .then((res)=>\n// // console.log (res)\n// // )\n// console.log(data)\n// return data\n// }\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    //maxWidth: '920px'\n  }\n}));\n\nconst ReportStatusView = () => {\n  const classes = useStyles();\n  const [hubInfo, setHubInfo] = useState([]);\n  const [state, setState] = useState({});\n  const [change, setChange] = useState(false);\n\n\n  useEffect(() => {\n    async function fetchData() {\n      // console.log(state)\n\n      // const result = await axios({\n      //   method: 'post',\n      //   // url: 'http://3.15.126.206/api/report',\n      //   url: `http://${process.env.REACT_APP_SERVER_URI}/api/report`,\n      //   data: state,\n      //   headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      // })\n      // var tableData = result.data.filter(x => x != null)\n      // console.log(tableData)\n      // setCustomers(tableData)\n      //return result\n    }\n\n    fetchData()\n    // console.log(reportData)\n\n\n    //setData(result);\n  }, []);\n\n  const handleChange = (newValue) => {\n    console.log(newValue)\n\n    setState(newValue)\n    setChange(true)\n\n  }\n\n  console.log(state)\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Report\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar value={state} onChange={handleChange} />\n        <Box mt={3}>\n        {change?<Display hubInfo={state} />:null}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ReportStatusView;\n","/home/ubuntu/admin-mui/src/views/display/DisplayView/Toolbar.js",["195","196"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  // TextField,\n  // InputAdornment,\n  // SvgIcon,\n  makeStyles,\n  FormControl,\n  InputLabel,\n  Select,\n  // CardHeader,\n  // Typography\n} from '@material-ui/core';\n//import { Search as SearchIcon } from 'react-feather';\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 160,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Toolbar = ({ className, value, onChange, ...rest }) => {\n  console.log(value)\n  const classes = useStyles();\n  const [state, setState] = useState({});\n  const [campusData, setCampusData] = useState([]);\n  const [venuesData, setVenuesData] = useState([]);\n  const [sectionData, setSectionData] = useState([]);\n  const [roomData, setRoomData] = useState([]);\n  const [hubsData, setHubsData] = useState([]);\n  const [showVenue, setShowVenue] = useState(false);\n  const [showHub, setShowHub] = useState(false);\n  const [showSection, setShowSection] = useState(false);\n  const [showRoom, setShowRoom] = useState(false);\n  const [enableButton, setEnableButton] = useState(false);\n\n  // const [haveVenues, setHaveVenues] = useState(false);\n\n  //const prevState = usePrevious(state);\n\n  const campusHandleChange = async (event) => {\n    // onChange(\"\")\n    setHubsData([])\n    setVenuesData([])\n    //var name = event.target.name;\n    var campus = event.target.value;\n    var selectedIndex = event.target.options.selectedIndex;\n    var campus_name= event.target.options[selectedIndex].innerText\n    console.log(event.target.options[selectedIndex].innerText);\n    var campusInfo = campusData.find(({campus_id}) => campus_id == event.target.value)\n    console.log(campusInfo)\n    //  console.log(event)\n    setState({\n      //...state,\n      campus,\n      campus_name: campusInfo.rabbitmq_id\n    });\n    let venueResult = await axios({\n      method: 'get',\n      url: `http://${process.env.REACT_APP_SERVER_URI}/api/venues?campus_id=${event.target.value}`,\n      //data: {id: varID},\n      headers: { \"Access-Control-Allow-Origin\": \"*\" }\n    })\n\n    if (venueResult.data[0].venue_id !== 0) {\n      //console.log(venueResult.data.venue_id)\n      setShowHub(false)\n      setShowRoom(false)\n      setShowVenue(true)\n      setShowSection(false)\n      setVenuesData(venueResult.data)\n\n    }\n    else {\n      setShowVenue(false)\n      setShowSection(false)\n      setShowRoom(false)\n\n      let hubResult = await axios({\n        method: 'get',\n        url: `http://${process.env.REACT_APP_SERVER_URI}/api/hubs?campus_id=${campus}`,\n        //data: {id: varID},\n        headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      })\n      console.log(hubResult.data)\n      setShowHub(true)\n      setHubsData(hubResult.data)\n\n\n    }\n\n  };\n\n  const venueHandleChange = async (event) => {\n    //  onChange(\"\")\n\n    setSectionData([])\n    //var name = event.target.name;\n    var selectedIndex = event.target.options.selectedIndex;\n    var venue_name= event.target.options[selectedIndex].innerText\n    console.log(event.target.options[selectedIndex].innerText);\n     var venue_id = event.target.value;\n    //  console.log(event)\n    setState(prevState => {\n      let newState = {\n        campus: prevState.campus,\n        campus_name: prevState.campus_name,\n        venue: venue_id,\n        venue_name      \n      }\n      return newState\n    });\n    let sectionResult = await axios({\n      method: 'get',\n      url: `http://${process.env.REACT_APP_SERVER_URI}/api/venue-sections?campus_id=${state.campus}&venue_id=${event.target.value}`,\n      //data: {id: varID},\n      headers: { \"Access-Control-Allow-Origin\": \"*\" }\n    })\n\n    if (sectionResult.data[0].venue_section_id !== 0) {\n      //console.log(venueResult.data.venue_id)\n      setShowHub(false)\n      setShowRoom(false)\n      setShowVenue(true)\n      setShowSection(true)\n      setSectionData(sectionResult.data)\n\n    }\n    else {\n      setShowVenue(false)\n      let hubResult = await axios({\n        method: 'get',\n        url: `http://${process.env.REACT_APP_SERVER_URI}/api/hubs?campus_id=${state.campus}`,\n        //data: {id: varID},\n        headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      })\n      console.log(hubResult.data)\n      setShowHub(true)\n      setHubsData(hubResult.data)\n\n    }\n\n  };\n\n\n  const sectionHandleChange = async (event) => {\n    //  onChange(\"\")\n\n    setRoomData([])\n    //var name = event.target.name;\n    var selectedIndex = event.target.options.selectedIndex;\n    var section_name= event.target.options[selectedIndex].innerText\n    console.log(event.target.options[selectedIndex].innerText);\n     var section = event.target.value;\n    setState(prevState => {\n      let newState = {\n        campus: prevState.campus,\n        campus_name: prevState.campus_name,\n        venue: prevState.venue,\n        venue_name: prevState.venue_name,\n        section,\n        section_name  \n      }\n      return newState\n    });\n\n\n    let roomResult = await axios({\n      method: 'get',\n      url: `http://${process.env.REACT_APP_SERVER_URI}/api/rooms?campus_id=${state.campus}&venue_id=${state.venue}&venue_section_id=${event.target.value}`,\n      //data: {id: varID},\n      headers: { \"Access-Control-Allow-Origin\": \"*\" }\n    })\nconsole.log(roomResult)\n    if (roomResult.data[0].room_id !== null) {\n      console.log(roomResult.data)\n      setShowHub(false)\n      setShowVenue(true)\n      setShowSection(true)\n      setRoomData(roomResult.data)\n      setShowRoom(true)\n\n    }\n    else {\n      //setShowVenue(false)\n      let hubResult = await axios({\n        method: 'get',\n        url: `http://${process.env.REACT_APP_SERVER_URI}/api/hubs?campus_id=${state.campus}`,\n        //data: {id: varID},\n        headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      })\n      console.log(hubResult.data)\n      setShowHub(true)\n      setHubsData(hubResult.data)\n\n\n    }\n\n\n\n  };\n\n  const roomHandleChange = async (event) => {\n    //  onChange(\"\")\n    setHubsData([])\n    //var name = event.target.name;\n    var selectedIndex = event.target.options.selectedIndex;\n    var room_name= event.target.options[selectedIndex].innerText\n    console.log(event.target.options[selectedIndex].innerText);\n    var room = event.target.value;\n\n    let roomResult = await axios({\n      method: 'get',\n      url: `http://${process.env.REACT_APP_SERVER_URI}/api/hubs?campus_id=${state.campus}&venue_id=${state.venue}&venue_section_id=${state.section}&room_id=${event.target.value}`,\n      //data: {id: varID},\n      headers: { \"Access-Control-Allow-Origin\": \"*\" }\n    })\n\n    //if (roomResult.data[0].hub_id !== null){\n    console.log(roomResult.data)\n    setState(prevState => {\n      let newState = {\n        campus: prevState.campus,\n        campus_name: prevState.campus_name,\n        venue: prevState.venue,\n        venue_name: prevState.venue_name,\n        section: prevState.section,\n        section_name: prevState.section_name,\n        room,\n        room_name,\n        hub:  roomResult.data[0].hub_id\n      }\n      console.log(newState)\n\n      return newState\n    });\n    // setShowHub(true)\n    setEnableButton(true)\n    setShowVenue(true)\n    setShowSection(true)\n    // setHubsData(roomResult.data)\n    setShowRoom(true)\n\n    // }\n    // else{\n    //   //setShowVenue(false)\n    //   let hubResult = await axios({\n    //     method: 'get',\n    //     url: `http://${process.env.REACT_APP_SERVER_URI}/api/hubs?campus_id=${state.campus}`,\n    //     //data: {id: varID},\n    //     headers: { \"Access-Control-Allow-Origin\": \"*\" }\n    //   })\n    //   console.log(hubResult.data)\n    //   setShowHub(true)\n    //   setHubsData(hubResult.data)\n\n\n    // }\n\n\n\n  };\n\n  const hubHandleChange = (event) => {\n    // Here, we invoke the callback with the new value\n    var name = event.target.name;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n    // onChange(event.target.value);\n    // onChange({\n    //   ...state,\n    //   [name]: event.target.value,\n    // });\n  }\n\n\n  useEffect(() => {\n    //  console.log(props)\n    async function fetchData() {\n      const result = await axios({\n        method: 'get',\n        url: `http://${process.env.REACT_APP_SERVER_URI}/api/campus`,\n        //data: {id: varID},\n        headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      })\n      //var campuseData=result.data\n      console.log(result.data)\n      setCampusData(result.data)\n    }\n    fetchData()\n  }, []);\n\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button className={classes.importButton}>\n          Import\n        </Button>\n        <Button className={classes.exportButton}>\n          Export\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add product\n        </Button>\n      </Box> */}\n      <Box >\n        <Card>\n          {/* <CardHeader> */}\n\n          {/* </CardHeader> */}\n          <CardContent>\n            <Box maxWidth={2500} mt={1}>\n              {/* <Typography component=\"h1\" variant=\"h4\" color=\"textPrimary\" gutterBottom>\n                  Please Select Hub ID :\n            </Typography> */}\n              {/* <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search product\"\n                variant=\"outlined\"\n              /> */}\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"campus\">Campus</InputLabel>\n                <Select\n                  native\n                  value={state.campus}\n                  onChange={campusHandleChange}\n                  label=\"Campus\"\n                  inputProps={{\n                    name: 'campus',\n                    id: 'campus',\n                    // havevenues:'false'\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {campusData.map((campus) =>\n                    <option value={campus.campus_id} key={campus.campus_id} >{campus.name}</option>\n                  )}\n                  {/* <option value={30}>Thirty</option> */}\n                </Select>\n              </FormControl>\n              {showVenue ? <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"venue\">Venue</InputLabel>\n                <Select\n                  native\n                  value={state.venue}\n                  onChange={venueHandleChange}\n                  label=\"Venue\"\n                  inputProps={{\n                    name: 'venue',\n                    id: 'venue',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {venuesData.map((venue, index) =>\n                    <option value={venue.venue_id} key={index}>{venue.name}</option>\n                  )}\n                </Select>\n              </FormControl> : null}\n              {showSection ? <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"section\">Venue Section</InputLabel>\n                <Select\n                  native\n                  value={state.section}\n                  onChange={sectionHandleChange}\n                  label=\"Venue Section\"\n                  inputProps={{\n                    name: 'section',\n                    id: 'section',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {sectionData.map((section, index) =>\n                    <option value={section.venue_section_id} key={index}>{section.section_name}</option>\n                  )}\n                </Select>\n              </FormControl> : null}\n\n              {showRoom ? <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"room\">Room</InputLabel>\n                <Select\n                  native\n                  value={state.room}\n                  onChange={roomHandleChange}\n                  label=\"Room\"\n                  inputProps={{\n                    name: 'room',\n                    id: 'room',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {roomData.map((room, index) =>\n                    <option value={room.room_id} key={index}>{room.name}</option>\n                  )}\n                </Select>\n              </FormControl> : null}\n              {showHub ? <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"hub\">Hub</InputLabel>\n                <Select\n                  native\n                  value={state.hub}\n                  onChange={hubHandleChange}\n                  label=\"Hub\"\n                  inputProps={{\n                    name: 'hub',\n                    id: 'hub',\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {hubsData.map((hub, index) =>\n                    <option value={hub.hub_id} key={index}>{hub.hub_id}</option>\n                  )}\n                </Select>\n              </FormControl> : null}\n              <FormControl variant=\"outlined\" className={classes.formControl} >\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.button}\n                  //startIcon={<Autorenew />}\n                  disabled={enableButton?false:true}\n                  onClick={() => { onChange(state) }}\n                >Open Display\n              </Button>\n              </FormControl>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\nToolbar.propTypes = {\n  className: PropTypes.string\n};\nexport default Toolbar;\n","/home/ubuntu/admin-mui/src/views/display/DisplayView/Display.js",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"import women_bg from '../../../assets/women_bg.gif'; // with import\nimport men_bg from '../../../assets/men_bg.gif';\n\nimport red_bg from '../../../assets/red_bg.gif';\nimport orange_bg from '../../../assets/orange_bg.gif';\nimport blue_bg from '../../../assets/blue_bg.gif';\n\nimport women_top_left from '../../../assets/women_top_left.png';\nimport men_top_left from '../../../assets/men_top_left.png';\n\nimport outer_frame from '../../../assets/outer_frame.png';\n\nimport inner_frame from '../../../assets/inner_frame.png';\n\nimport man from '../../../assets/man.png';\nimport woman from '../../../assets/woman.png';\n\nimport Tooshilights from '../../../assets/Tooshlights.png';\nimport modular_logo from '../../../assets/modular_logo.png';\nimport React, { useEffect, useState } from 'react';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n// import moment from 'moment';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\n\nimport {\n  // Avatar,\n  Box,\n  Grid,\n  Card,\n  Container,\n  CardMedia,\n  CardActionArea,\n  // Checkbox,\n  // Table,\n  // TableBody,\n  // TableCell,\n  // TableHead,\n  // TablePagination,\n  // TableRow,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n// import { palette } from '@material-ui/system';\n\n// import getInitials from 'src/utils/getInitials';\nimport { Client, Message } from '@stomp/stompjs';\n\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone'\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\n\nconst menBackgroundColor = '#1FB3F1'\nconst womenBackgroundColor = '#E94A74'\nconst WS_ENDPOINT = `ws://${process.env.REACT_APP_MESSAGE_BROKER_HOST}:${process.env.REACT_APP_MESSAGE_BROKER_PORT}/ws`\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh'\n  },\n  media: {\n    //  minHeight: 40,\n    backgroundSize: 'contain',\n    margin: '2vh'\n  },\n\n\n}));\n\nconst Display = ({ className, hubInfo, ...rest }) => {\n  const classes = useStyles();\n  // const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  console.log(hubInfo)\n\n  // const [limit, setLimit] = useState(1000);\n  // const [page, setPage] = useState(0);\n  // const [refresh, setRefresh ] = useState(hubInfo)\n  const [state, setState] = useState({\n    cronJob: null,\n    hubId: hubInfo.hub,\n    version: 3,\n    men_count: -1,\n    men_counts: [-1, -1, -1],\n    men_total: 1,\n    women_count: -1,\n    women_total: 1,\n    current_date: \"\",\n    current_time: \"\",\n    errorMsg: \"\"\n  });\n\n  useEffect(() => {\n    const { hubId, version } = state;\n    var routingKey = hubInfo.hub\n\n    if (version == 3) {\n      console.log(hubInfo.hub)\n\n      async function intializeValues() {\n        const result = await axios({\n          method: 'get',\n          url: `http://${process.env.REACT_APP_SERVER_URI}/api/sensor-status?campus_id=${hubInfo.campus}&hub_id=${hubInfo.hub}`,\n          //  data: { campus_id: 4, hub_id: hubId},\n          headers: { \"Access-Control-Allow-Origin\": \"*\" }\n        })\n        console.log(result)\n        var sensorStatus = result.data[0]\n\n        console.log(sensorStatus[0])\n        var womenStalls = sensorStatus.filter(val => (val.roomName == 'Women' || val.roomName == \"Women's Restroom\"))\n        console.log(womenStalls)\n\n        var menStalls = sensorStatus.filter(val => (val.roomName == 'Men' || val.roomName == \"Men's Restroom\"))\n        console.log(menStalls)\n\n        if (hubInfo.room_name == 'Men' || hubInfo.room_name  == \"Men's Restroom\") {\n          var menVacants = menStalls.filter(val => val.stallStatus == 'O')\n          setState({\n            ...state,\n            hubId: hubInfo.hub,\n            men_count: menVacants.length,\n            // women_count: data.women_count,\n            men_total: menStalls.length,\n            // women_total: data.women_total,\n            //  current_date: feed_datetime[0],\n            // current_time: feed_datetime[1],\n            errorMsg: \"\"\n          })\n        }\n        if (hubInfo.room_name == 'Women' || hubInfo.room_name== \"Women's Restroom\") {\n          var womenVacants = womenStalls.filter(val => val.stallStatus == 'O')\n          setState({\n            ...state,\n            hubId: hubInfo.hub,\n            women_count: womenVacants.length,\n            // women_count: data.women_count,\n            women_total: womenStalls.length,\n            // women_total: data.women_total,\n            //  current_date: feed_datetime[0],\n            // current_time: feed_datetime[1],\n            errorMsg: \"\"\n          })\n        }\n\n      }\n\n      intializeValues()\n\n      const subscribeURL = (hubInfo.venue > 0) ? `/exchange/${hubInfo.campus_name}/${hubInfo.venue_name}.${hubInfo.section_name}.${hubInfo.room_name}` : `/exchange/${hubInfo.campus_name}/${hubInfo.hub}`\n      // subscribe using STOMP\n      const client = new Client({\n        brokerURL: `${WS_ENDPOINT}`,\n        connectHeaders: {\n          login: process.env.REACT_APP_MESSAGE_BROKER_USERNAME,\n          passcode: process.env.REACT_APP_MESSAGE_BROKER_PASSWORD,\n        },\n        debug: function (str) {\n          console.log(str);\n        },\n        // reconnectDelay: 5000,\n        heartbeatIncoming: 4000,\n        heartbeatOutgoing: 4000,\n      });\n      client.onConnect = function (frame) {\n        console.log('done')\n        // Do something, all subscribes must be done is this callback\n        // This is needed because this will be executed after a (re)connect\n        var subscription = client.subscribe(subscribeURL, function (message) {\n          // called when the client receives a STOMP message from the server\n\n          if (message.body) {\n            console.log(message.body);\n\n            var receivdData = JSON.parse(message.body)\n            if (receivdData.roomName == 'Women' || receivdData.roomName == \"Women's Restroom\")\n              setState({\n                ...state,\n                hubId: hubInfo.hub,\n                // men_count: receivdData.availableStalls,\n                women_count: receivdData.roomAvailableStalls,\n                //  women_count: message.body.women_count,\n                // men_total: receivdData.totalStalls,\n                women_total: receivdData.roomTotalStalls,\n                // women_total: message.body.women_total,\n                //  current_date: feed_datetime[0],\n                //   current_time: feed_datetime[1],\n                errorMsg: \"\"\n              })\n            else if (receivdData.roomName == 'Men' || receivdData.roomName == \"Men's Restroom\")\n              setState({\n                ...state,\n                hubId: hubInfo.hub,\n                men_count: receivdData.roomAvailableStalls,\n                //  women_count: message.body.women_count,\n                men_total: receivdData.roomTotalStalls,\n                // women_total: message.body.women_total,\n                //  current_date: feed_datetime[0],\n                //   current_time: feed_datetime[1],\n                errorMsg: \"\"\n              })\n\n          } else {\n            console.log('got empty message');\n          }\n        });\n      };\n\n      client.onStompError = function (frame) {\n        // Will be invoked in case of error encountered at Broker\n        // Bad login/passcode typically will cause an error\n        // Complaint brokers will set `message` header with a brief message. Body may contain details.\n        // Compliant brokers will terminate the connection after any error\n        console.log('Broker reported error: ' + frame.headers['message']);\n        console.log('Additional details: ' + frame.body);\n      };\n\n      client.activate();\n      return () => client.deactivate();\n\n\n    }\n  }, [hubInfo])\n\n\n  console.log(state)\n  let { hubId, men_counts, men_count, women_count, men_total, women_total, current_date, current_time, errorMsg } = state;\n\n  const handle = useFullScreenHandle();\n\n  return (\n    <div\n      style={{ height: '100vh' }}\n      id='monitor-wrapper'>\n      {/* <button onClick={handle.enter}>\n        Enter fullscreen\n      </button> */}\n      <FullScreen handle={handle}>\n\n        <Grid\n          //   style={{height:'100%' }}\n          className={classes.root}\n\n        >\n          {hubInfo.room_name == 'Men' || hubInfo.room_name  == \"Men's Restroom\" ? (\n            <Grid>\n              <Card >\n                <CardActionArea\n                  style={{ backgroundColor: `${menBackgroundColor}`, alignItems: 'center', justifyContent: 'center' }}\n                  onClick={handle.enter}\n                // onClick={handleToggleFullscreen()}\n                >\n                  <Typography\n                    style={{\n                      color: 'white',\n                      fontSize: '4vh',\n                      textAlign: 'center',\n                      padding: '2vh 40px 0px 40px',\n                      borderRadius: '35px',\n                      fontWeight: '700'\n                    }}\n                  >MEN</Typography>\n                  <Grid\n                    className={classes.media}\n                    style={{\n                      backgroundColor: `${menBackgroundColor}`,\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      textAlign: 'center'\n                    }}\n                  >\n                    <img src={man} alt=\"outer-frame\"\n                      style={{\n                        height: '62vh',\n                        border: '10px solid white',\n                        borderRadius: '35px',\n                        padding: '3vh 17vw'\n                      }} />\n                  </Grid>\n                  <Grid\n                    className={classes.media}\n                    style={{\n                      backgroundColor: `${menBackgroundColor}`,\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      textAlign: 'center',\n                      padding: '0',\n                      marginBottom: '0'\n                    }}\n                  >\n                    <Typography\n                      style={{\n                        color: 'white',\n                        fontSize: '5vh',\n                        backgroundColor: '#343434',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        textAlign: 'center',\n                        padding: '1vh 3.5vh',\n                        width: 'fit-content',\n                        fontFamily:[\n                          'Bebas Neue',\n                          'fantasy',\n                          'cursive',\n                        ].join(',') ,\n                        borderRadius: '75px',\n                        margin: 'auto'\n                      }}\n                    >{men_count}</Typography>\n                  </Grid>\n                  <Grid\n                    className={classes.media}\n                    style={{\n                      backgroundColor: `${menBackgroundColor}`,\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      textAlign: 'center',\n                      padding: '3vh 0px',\n                      marginTop: '0'\n                    }}\n                  >\n                    <Typography\n                      style={{\n                        color: 'white',\n                        fontSize: '3vh',\n                        backgroundColor: '#343434',\n                        textAlign: 'center',\n                        padding: '2vh 12vw',\n                        fontFamily:[\n                          'Bebas Neue',\n                          'fantasy',\n                          'cursive',\n                        ].join(',') ,\n                        borderRadius: '20px',\n                        width: 'fit-content',\n                        margin: 'auto'\n                      }}\n                    >STALLS AVAILABLE</Typography>\n                  </Grid>\n                </CardActionArea>\n              </Card>\n            </Grid>\n          ) : null}\n          {hubInfo.room_name == 'Women' || hubInfo.room_name  == \"Women's Restroom\" ? (\n            <Grid>\n              <Card >\n                <CardActionArea\n                  style={{ backgroundColor: `${womenBackgroundColor}`, alignItems: 'center', justifyContent: 'center' }}\n                  onClick={handle.enter}\n                // onClick={handleToggleFullscreen()}\n                >\n                  <Typography\n                    style={{\n                      color: 'white',\n                      fontSize: '4vh',\n                      textAlign: 'center',\n                      padding: '2vh 40px 0px 40px',\n                      borderRadius: '35px',\n                      fontWeight: '700'\n                    }}\n                  >WOMEN</Typography>\n                  <Grid\n                    className={classes.media}\n                    style={{\n                      backgroundColor: `${womenBackgroundColor}`,\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      textAlign: 'center'\n                    }}\n                  >\n                    <img src={woman} alt=\"outer-frame\" style={{\n                      height: '62vh',\n                      border: '10px solid white',\n                      borderRadius: '35px',\n                      padding: '3vh 17vw'\n                    }}\n                    />\n                  </Grid>\n                  <Grid\n                    className={classes.media}\n                    style={{\n                      backgroundColor: `${womenBackgroundColor}`,\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      textAlign: 'center',\n                      padding: '0',\n                      marginBottom: '0'\n                    }}\n                  >\n                    <Typography\n                      style={{\n                        color: 'white',\n                        fontSize: '5vh',\n                        backgroundColor: '#343434',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        textAlign: 'center',\n                        padding: '1vh 3.5vh',\n                        width: 'fit-content',\n                        fontFamily:[\n                          'Bebas Neue',\n                          'fantasy',\n                          'cursive',\n                        ].join(',') ,\n                        borderRadius: '75px',\n                        margin: 'auto'\n                      }}\n                    >{women_count}</Typography>\n                  </Grid>\n                  <Grid\n                    className={classes.media}\n                    style={{\n                      backgroundColor: `${womenBackgroundColor}`,\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      textAlign: 'center',\n                      padding: '3vh 0px',\n                      marginTop: '0'\n                    }}\n                  >\n                    <Typography\n                      style={{\n                        color: 'white',\n                        fontSize: '3vh',\n                        backgroundColor: '#343434',\n                        textAlign: 'center',\n                        padding: '2vh 12vw',\n                        fontFamily:[\n                          'Bebas Neue',\n                          'fantasy',\n                          'cursive',\n                        ].join(',') ,\n                        borderRadius: '20px',\n                        width: 'fit-content',\n                        margin: 'auto'\n                      }}\n                    >STALLS AVAILABLE</Typography>\n                  </Grid>\n                </CardActionArea>\n              </Card>\n            </Grid>\n          ) : null}\n        </Grid>\n      </FullScreen>\n    </div>\n  );\n}\nDisplay.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.object\n};\nexport default Display;\n",{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"243","replacedBy":"247"},{"ruleId":"245","replacedBy":"248"},{"ruleId":"243","replacedBy":"249"},{"ruleId":"245","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":64,"column":61,"nodeType":"253","messageId":"254","endLine":64,"endColumn":63},{"ruleId":"255","severity":1,"message":"256","line":17,"column":10,"nodeType":"257","messageId":"258","endLine":17,"endColumn":12},{"ruleId":"255","severity":1,"message":"259","line":19,"column":18,"nodeType":"257","messageId":"258","endLine":19,"endColumn":25},{"ruleId":"255","severity":1,"message":"260","line":74,"column":9,"nodeType":"257","messageId":"258","endLine":74,"endColumn":16},{"ruleId":"255","severity":1,"message":"261","line":112,"column":11,"nodeType":"257","messageId":"258","endLine":112,"endColumn":23},{"ruleId":"255","severity":1,"message":"262","line":50,"column":10,"nodeType":"257","messageId":"258","endLine":50,"endColumn":17},{"ruleId":"255","severity":1,"message":"263","line":50,"column":19,"nodeType":"257","messageId":"258","endLine":50,"endColumn":29},{"ruleId":"255","severity":1,"message":"264","line":65,"column":9,"nodeType":"257","messageId":"258","endLine":65,"endColumn":20},{"ruleId":"251","severity":1,"message":"252","line":67,"column":65,"nodeType":"253","messageId":"254","endLine":67,"endColumn":67},{"ruleId":"255","severity":1,"message":"265","line":1,"column":8,"nodeType":"257","messageId":"258","endLine":1,"endColumn":16},{"ruleId":"255","severity":1,"message":"266","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"267","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":14},{"ruleId":"255","severity":1,"message":"268","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":17},{"ruleId":"255","severity":1,"message":"269","line":6,"column":8,"nodeType":"257","messageId":"258","endLine":6,"endColumn":15},{"ruleId":"255","severity":1,"message":"270","line":8,"column":8,"nodeType":"257","messageId":"258","endLine":8,"endColumn":22},{"ruleId":"255","severity":1,"message":"271","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":20},{"ruleId":"255","severity":1,"message":"272","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":19},{"ruleId":"255","severity":1,"message":"273","line":13,"column":8,"nodeType":"257","messageId":"258","endLine":13,"endColumn":19},{"ruleId":"255","severity":1,"message":"274","line":18,"column":8,"nodeType":"257","messageId":"258","endLine":18,"endColumn":20},{"ruleId":"255","severity":1,"message":"275","line":19,"column":8,"nodeType":"257","messageId":"258","endLine":19,"endColumn":20},{"ruleId":"255","severity":1,"message":"276","line":22,"column":8,"nodeType":"257","messageId":"258","endLine":22,"endColumn":12},{"ruleId":"255","severity":1,"message":"277","line":30,"column":3,"nodeType":"257","messageId":"258","endLine":30,"endColumn":6},{"ruleId":"255","severity":1,"message":"278","line":33,"column":3,"nodeType":"257","messageId":"258","endLine":33,"endColumn":12},{"ruleId":"255","severity":1,"message":"279","line":34,"column":3,"nodeType":"257","messageId":"258","endLine":34,"endColumn":12},{"ruleId":"255","severity":1,"message":"259","line":49,"column":18,"nodeType":"257","messageId":"258","endLine":49,"endColumn":25},{"ruleId":"255","severity":1,"message":"280","line":99,"column":13,"nodeType":"257","messageId":"258","endLine":99,"endColumn":18},{"ruleId":"255","severity":1,"message":"281","line":100,"column":9,"nodeType":"257","messageId":"258","endLine":100,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":102,"column":17,"nodeType":"253","messageId":"254","endLine":102,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":116,"column":68,"nodeType":"253","messageId":"254","endLine":116,"endColumn":70},{"ruleId":"251","severity":1,"message":"252","line":116,"column":95,"nodeType":"253","messageId":"254","endLine":116,"endColumn":97},{"ruleId":"251","severity":1,"message":"252","line":119,"column":66,"nodeType":"253","messageId":"254","endLine":119,"endColumn":68},{"ruleId":"251","severity":1,"message":"252","line":119,"column":91,"nodeType":"253","messageId":"254","endLine":119,"endColumn":93},{"ruleId":"251","severity":1,"message":"252","line":122,"column":31,"nodeType":"253","messageId":"254","endLine":122,"endColumn":33},{"ruleId":"251","severity":1,"message":"252","line":122,"column":62,"nodeType":"253","messageId":"254","endLine":122,"endColumn":64},{"ruleId":"251","severity":1,"message":"252","line":123,"column":68,"nodeType":"253","messageId":"254","endLine":123,"endColumn":70},{"ruleId":"251","severity":1,"message":"252","line":136,"column":31,"nodeType":"253","messageId":"254","endLine":136,"endColumn":33},{"ruleId":"251","severity":1,"message":"252","line":136,"column":62,"nodeType":"253","messageId":"254","endLine":136,"endColumn":64},{"ruleId":"251","severity":1,"message":"252","line":137,"column":72,"nodeType":"253","messageId":"254","endLine":137,"endColumn":74},{"ruleId":"255","severity":1,"message":"261","line":174,"column":13,"nodeType":"257","messageId":"258","endLine":174,"endColumn":25},{"ruleId":"251","severity":1,"message":"252","line":181,"column":38,"nodeType":"253","messageId":"254","endLine":181,"endColumn":40},{"ruleId":"251","severity":1,"message":"252","line":181,"column":73,"nodeType":"253","messageId":"254","endLine":181,"endColumn":75},{"ruleId":"251","severity":1,"message":"252","line":195,"column":43,"nodeType":"253","messageId":"254","endLine":195,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":195,"column":76,"nodeType":"253","messageId":"254","endLine":195,"endColumn":78},{"ruleId":"282","severity":1,"message":"283","line":228,"column":6,"nodeType":"284","endLine":228,"endColumn":15,"suggestions":"285"},{"ruleId":"255","severity":1,"message":"280","line":232,"column":9,"nodeType":"257","messageId":"258","endLine":232,"endColumn":14},{"ruleId":"255","severity":1,"message":"286","line":232,"column":16,"nodeType":"257","messageId":"258","endLine":232,"endColumn":26},{"ruleId":"255","severity":1,"message":"287","line":232,"column":52,"nodeType":"257","messageId":"258","endLine":232,"endColumn":61},{"ruleId":"255","severity":1,"message":"288","line":232,"column":63,"nodeType":"257","messageId":"258","endLine":232,"endColumn":74},{"ruleId":"255","severity":1,"message":"289","line":232,"column":76,"nodeType":"257","messageId":"258","endLine":232,"endColumn":88},{"ruleId":"255","severity":1,"message":"290","line":232,"column":90,"nodeType":"257","messageId":"258","endLine":232,"endColumn":102},{"ruleId":"255","severity":1,"message":"291","line":232,"column":104,"nodeType":"257","messageId":"258","endLine":232,"endColumn":112},{"ruleId":"251","severity":1,"message":"252","line":250,"column":30,"nodeType":"253","messageId":"254","endLine":250,"endColumn":32},{"ruleId":"251","severity":1,"message":"252","line":250,"column":61,"nodeType":"253","messageId":"254","endLine":250,"endColumn":63},{"ruleId":"251","severity":1,"message":"252","line":349,"column":30,"nodeType":"253","messageId":"254","endLine":349,"endColumn":32},{"ruleId":"251","severity":1,"message":"252","line":349,"column":63,"nodeType":"253","messageId":"254","endLine":349,"endColumn":65},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],["292"],["293"],["292"],["293"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","'Message' is defined but never used.","'classes' is assigned a value but never used.","'subscription' is assigned a value but never used.","'hubInfo' is assigned a value but never used.","'setHubInfo' is assigned a value but never used.","'campus_name' is assigned a value but never used.","'women_bg' is defined but never used.","'men_bg' is defined but never used.","'red_bg' is defined but never used.","'orange_bg' is defined but never used.","'blue_bg' is defined but never used.","'women_top_left' is defined but never used.","'men_top_left' is defined but never used.","'outer_frame' is defined but never used.","'inner_frame' is defined but never used.","'Tooshilights' is defined but never used.","'modular_logo' is defined but never used.","'clsx' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'CardMedia' is defined but never used.","'hubId' is assigned a value but never used.","'routingKey' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["294"],"'men_counts' is assigned a value but never used.","'men_total' is assigned a value but never used.","'women_total' is assigned a value but never used.","'current_date' is assigned a value but never used.","'current_time' is assigned a value but never used.","'errorMsg' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},"Update the dependencies array to be: [hubInfo, state]",{"range":"297","text":"298"},[7641,7650],"[hubInfo, state]"]